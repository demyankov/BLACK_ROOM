{"version":3,"sources":["app/create_tag.js","app/additional.js","app/display.js","app/app.js"],"names":["createTag","tagName","className","text","tag","document","createElement","classList","add","innerText","createInput","type","setAttribute","createButton","appendTag","i","arguments","length","append","calcCountTasksInToDo","cards","filter","el","status","active","calcCountTasksInProgress","calcCountTasksInDone","setCountOfCards","querySelector","getDate","dateNow","Date","dayNow","monthNow","getMonth","getFullYear","getTime","timeNow","hoursNow","minutesNow","getMinutes","getHours","displayTime","setInterval","users","getCardData","card","title","description","user","fetch","then","response","json","data","createListOfUsers","fillingFormCard","catch","err","alert","todoWrapper","inProgressWrapper","doneWrapper","selectUsers","innerHTML","forEach","option","name","renderTodo","cardsToDo","form","id","taskBtn","btnEdit","btnDelete","taskTitle","taskDescription","taskUser","taskDate","btnToProgress","fillingCard","messageIfEmpty","renderInProgress","cardsInProgress","btnBack","btnComplete","renderDone","cardsDone","date","date_to_progress","date_to_done","value","closeEditForm","cardFormWrapper","toggle","boardDisplay","board","closest","boardId","todoHeader","inProgressHeader","doneHeader","deletedCard","addOrEdit","editCard","idEditCard","localStorage","getItem","JSON","parse","setLocalStorage","cardsArray","idCounter","setItem","stringify","createObject","task","addEventListener","boardWrapper","cardForm","confirmBtn","cancelTodoBtn","warningWrapper","confirmWarningBtn","cancelWarningBtn","e","target","includes","addNewCard","editingCard","getCardFormData","push","event","inListenerEditCard","countTasksInProgress","inListenerToProgress","hidden","getAttribute","titleTag","descriptionTag","userTag","inListenerDeleteCard","parentClass","deletedCardId","date_deleted","inListenerToTodo","inListenerToDone","toProgressCardId","toTodoCardId","date_to_todo","toDoneCardId","date_edit"],"mappings":";;;;;;;;AGAA;;AFAA,AEYA,AHZO,SAASA,SAAT,CAAoBC,OAApB,EAA6BC,SAA7B,EAAwCC,IAAxC,EAA6C;EAChD,IAAIC,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuBL,OAAvB,CAAV;ACCJ,AEiBO,EHjBHC,EGiBOkB,KAAJ,EAAW,AHjBL,GAAGhB,GAAG,CAACG,SAAJ,CAAcC,GAAd,CAAkBN,SAAlB,CAAH,GAAgC,IAAzC;ACCJ,EDAIC,IAAI,GCACgB,ADAEf,GAAG,CAACK,SAAJ,GAAgBN,ICA3B,ADAQ,GCAwB,ADAA,IAA5B;ECCF,ADAE,OCAKiB,ADAEhB,GAAP,QCAWiB,MAAN,CAAa,UAACC,EAAD,EAAQ;AEgB9B,AHfC,ICAG,AEeAiD,EAAJ,EAAQ,GFfGjD,EAAE,CAACC,MAAH,IAAa,MAAb,IAAuBD,EAAE,CAACE,MAAH,IAAa,MAA3C;ACLJ,EDMG,CAFM,EAEJP,MAFH;AAGD,AEcD,AHdO,ECEP,EEYIqF,KHdY5F,MGchB,EAAiB,GHdV,CAAsBR,SAAtB,EAAiCS,IAAjC,EAAuCR,IAAvC,EAA4C;AENnD,EFOI,IAAIC,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAV;AGcJ,EHbIJ,EGaAqG,OHbS,EGab,CHbgBnG,CGaD,EHbI,CAACG,SAAJ,CAAcC,GAAd,CAAkBN,SAAlB,CAAH,GAAgC,IAAzC;ACCG,ACRP,EFQIS,IAAI,GCAQc,ADALrB,GAAG,CAACQ,YAAJ,CAAkB,MAAlB,CCAJ,CDA8BD,ECAM,EDAhC,CAAH,GAAmCP,GAAG,CAACQ,YAAJ,CAAkB,MAAlB,EAA0B,MAA1B,CAAvC;AGaJ,EFZE,ADAET,EGYAqG,EHZI,GCACpF,ADAEhB,GGYX,AHZc,CAACQ,CGYD,MFZCS,KDAJ,CCAF,ADAoB,CCAP,UAACC,EAAD,ADAX,ECAmB,ADAcnB,IAAjC,CAAH,GAA0C,IAA9C;AEPJ,EFQI,ECAA,KDAOC,ECAAkB,CDAP,CCAS,CAACC,MAAH,IAAa,aAAb,IAA8BD,EAAE,CAACE,MAAH,IAAa,MAAlD;AEYJ,AHXC,AERM,EDQJ,ADEH,CCJS,CEaLiF,CFXCxF,ICRWyB,EDMd,GEaF,EAAgB,IDnBT,CAAqBN,OAArB,EAA8B;ADSpC,ADED,ECAA,ACVE/B,QAAQ,CAACuB,aAAT,CAAuB,eAAvB,EAAwCnB,SAAxC,GAAoD2B,OAAO,EAA3D;ACmBF,AHRA,AEVC,EAED,ECgBIW,KAAJ,EAAW;AHPX;ACDA,AESA,AHPA,IGOIC,KFTKtB,MEST,EAAiB,YFTjB,GAAgC;ADGhC,AEVAiB,EDQE,OAAOvB,ECRE,CAAC,QDQGC,MAAN,CAAa,UAACC,EAAD,EAAQ;AES9B,AHNA,EEXY,EDSR,AEQA2B,IAAJ,CDjBkBP,CCiBR,CFRCpB,EAAE,CAACC,MAAH,ACTkB,CAACa,GDSN,MAAb,IAAuBd,EAAE,CAACE,GCTR,CAAjB,EDSsB,IAAa,MAA3C;AEUJ,ADnBY,CAAD,CDUR,CAFM,ACR+B,EDUnCP,ECVM,CAAX,GDQE;AAGD,ACTD,IAAI2B,KAAJ;ACkBA8D,AHPO,SAAS7F,GGOJ,CAAC8F,OAAb,CAAqB,AHPd,CAAuBzG,GGO9B,IAA8BqE,EAAE,AHPzB,EAAkC5D,CGON+F,GHP5B,EAAwCvG,IAAxC,EAA6C,CGOL,CAACwG,OAAb,CAAqB,IAArB,CAAnC,GAAkEpC,EAAE,GAAG,CAAvE;AFPO,AEQPmC,ADlBO,EFWH,IAAItG,GCDQuB,ADCL,AEXKkB,GCkBJ,AHPExC,CGODsG,OAAb,AHPsB,AEXf,CCkBc,AHPErG,AEXKwC,GDUrB,CCVA,EDU2B,ACVAC,CCkBlC,IDlBO,EFWO,AEX2BC,CFWJ,QAAvB,CAAV,CEXG,EAA+CC,CCmBjD7B,GDnBE,ECmBG,ADnBkD,GCmB/CwF,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CADb,mBAEKvF,KAAK,GAAG,EAFb,EAIA;EFXEf,ADCEH,AEXF,QDUQ,CAAC0B,ADCE,GAAGxB,GAAG,CAACG,MCDlB,CAAuB,EDCT,CAAcC,GAAd,CAAkBN,MCDhC,EAAsCO,CDCxB,CAAH,GAAgC,ICD3C,ADCE,GCDgDU,oBAAoB,EAAtE;AEYF,EFXEd,ADCEM,AEXFiC,IFWM,CEXD,ECqBEkE,AHVE1G,CCDD,ACVA8C,CDUCtB,CDCG,CAAChB,EEXA,CAAC,QDUd,AEWF,CFXyB,AEWAmG,AHVd,CAAkB,MAAlB,EAA0BpG,CGUrC,EAAqCqG,CHV1B,CAAH,GAAmC5G,GCDzC,ADC4C,CGU9C,AHV+CQ,CCDAH,CEWC,QFX9C,EDCyC,CCAvCgB,ADAyD,CEX9C,CAAL,CACL0B,GFUsC,CEXjC,CFW2D,AEV3D,QFUiC,CAAvC,CEVOC,MDUiB,EAD1B,ACTQ;EDWR/C,AEUA0G,AHVE5G,EEXM,EFWF,GAAGC,CCAD,CAACwB,ACXawB,CCqBZ,AHVE,CAAC3C,EGUAiG,IDrBiB,CAACrD,EFWtB,ECAT,ACXsB,CDWC,ADAClD,CEXhB,CCqBiB,CAAC8G,CHVpB,GAAuB,GGUhB,CAAqB,AHVhC,ECAF,EAAsCxG,GEUzB,EAA8BmG,IFV3C,AEU+C,CAACM,EFVExF,OEUP,CAAeqF,UAAf,CAA9B,CFVyD,AEU5D,EFVV,CEUyE,IAAzE;AFTD,EAED,AEQEC,AHVE,AEZM,CADA,EAEL7D,IFWM/C,AEbD,CAEA,CCqBC,CHVP,EGUUsG,MDrBHpD,IAAD,ECqBgB,ADrBN,CCqBO2D,OAAb,CAAqB,IAArB,EAA2BD,SAA3B,CAAH,GAA2C,IAApD;AACD,AHVA,EGYD,EDvBMzD,iBAAiB,CAACD,IAAD,CAAjB,CADc,CACW;;ADaxB,ADCA,IEbDE,KDYU3B,ADCAf,OCDT,EDCA,CCDmB,ACZL,CAACgC,CFaO,GEbR,EAAOC,KAAP,EAAcC,WAAd,EAA2BC,IAA3B,CAAf,CAFc,CAEmC;ACuBhD,EFVL,ADCE,AEbC,CALK,EAMLQ,CDWC3B,CDCG,EGSOqF,CD3BN,CFkBGpG,AEZF,CFYG,CCDD,EDCG,CCDA,ADCZ,EAAeA,CAAC,CCDAgB,CEUb,ADrBK2B,CFYS1C,ECDL,AEUe,ADrBpB,EDWT,KDC4B,CAACC,MAA3B,EAAkCF,CAAC,EAAnC,EAAuC;ECAzC,AEUA,EHTMC,AEbG,EDYLgB,KCZc2B,CDYlB,CDCe,CAAC,CAAD,CAAT,AEbiB,CFaJzC,AEbKwC,GAAD,CAAd,EFaH,CAAoB1C,SAAS,CAACD,CAAD,CAA7B,UGSqCC,SAA3C;EFTA,A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","file":"app.e87ca0bd.js","sourceRoot":"..\\src","sourcesContent":["export function createTag (tagName, className, text){\r\n    let tag = document.createElement(tagName)\r\n    className ? tag.classList.add(className):null\r\n    text ? tag.innerText = text:null\r\n    return tag\r\n}\r\n\r\nexport function createInput (className, type, text){\r\n    let tag = document.createElement('input')\r\n    className ? tag.classList.add(className):null\r\n    type ? tag.setAttribute ('type', type):tag.setAttribute ('type', 'text')\r\n    text ? tag.setAttribute ('placeholder', text):null \r\n    return tag\r\n}\r\n\r\n// export function createTextArea (className, type, text){\r\n//     let tag = document.createElement('textarea')\r\n//     className ? tag.classList.add(className):null\r\n//     type ? tag.setAttribute ('type', type):tag.setAttribute ('type', 'text')\r\n//     text ? tag.setAttribute ('placeholder', text):null \r\n//     return tag\r\n// }\r\n\r\nexport function createButton (className, type, text){\r\n    let tag = document.createElement('button')\r\n    className ? tag.classList.add(className):null\r\n    type ? tag.setAttribute ('type', type):tag.setAttribute ('type', 'button')\r\n    text ? tag.innerText =text:null    \r\n    return tag\r\n}\r\n\r\n\r\nexport function appendTag () {\r\n    for (let i =1; i<arguments.length;i++) {\r\n        arguments[0].append(arguments[i])  \r\n    };      \r\n}","import { cards } from \"./app.js\";\r\n\r\n//количество карточек в TODO\r\nfunction calcCountTasksInToDo() {\r\n  return cards.filter((el) => {\r\n    return el.status == \"todo\" && el.active == \"true\";\r\n  }).length;\r\n}\r\n\r\n//количество карточек в INPROGRESS\r\nexport function calcCountTasksInProgress() {\r\n  return cards.filter((el) => {\r\n    return el.status == \"in_progress\" && el.active == \"true\";\r\n  }).length;\r\n}\r\n\r\n//количество карточек в DONE\r\nfunction calcCountTasksInDone() {\r\n  return cards.filter((el) => {\r\n    return el.status == \"done\" && el.active == \"true\";\r\n  }).length;\r\n}\r\n\r\nexport function setCountOfCards() {\r\n  document.querySelector(\"#count_todo\").innerText = calcCountTasksInToDo();\r\n  document.querySelector(\"#count_in-progress\").innerText =\r\n    calcCountTasksInProgress();\r\n  document.querySelector(\"#count_done\").innerText = calcCountTasksInDone();\r\n}\r\n\r\n//формирование текущей даты\r\nexport function getDate() {\r\n  let dateNow = new Date();\r\n  let dayNow;\r\n  let monthNow;\r\n  dateNow.getDate() < 10\r\n    ? (dayNow = `0${dateNow.getDate()}`)\r\n    : (dayNow = dateNow.getDate());\r\n  dateNow.getMonth() < 9\r\n    ? (monthNow = `0${dateNow.getMonth() + 1}`)\r\n    : (monthNow = dateNow.getMonth() + 1);\r\n  return `${dayNow}.${monthNow}.${dateNow.getFullYear()}`;\r\n}\r\n\r\n//формирование текущего времени\r\nexport function getTime() {\r\n  let timeNow = new Date();\r\n  let hoursNow;\r\n  let minutesNow;\r\n  timeNow.getMinutes() < 10\r\n    ? (minutesNow = `0${timeNow.getMinutes()}`)\r\n    : (minutesNow = timeNow.getMinutes());\r\n  timeNow.getHours() < 9\r\n    ? (hoursNow = `0${timeNow.getHours()}`)\r\n    : (hoursNow = timeNow.getHours());\r\n  return `${hoursNow}:${minutesNow}`;\r\n}\r\n","import { createTag, createButton, appendTag } from \"./create_tag.js\";\r\nimport { setCountOfCards, getTime } from \"./additional.js\";\r\nimport { cards, cardFormWrapper, cardForm } from \"./app.js\";\r\n\r\n//отображение текущего времени в header\r\nexport function displayTime(getTime) {\r\n  document.querySelector(\".header__time\").innerText = getTime();\r\n}\r\n\r\n//обновление текущего времени в header\r\nsetInterval(() => displayTime(getTime), 1000);\r\n\r\nlet users;\r\nexport function getCardData(card, title, description, user) {\r\n  //запрашиваем массив пользователей\r\n  users = fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      createListOfUsers(data); // добавляем пользователей в список формы добавления/редактирования карточки\r\n      fillingFormCard(card, title, description, user); // заполнение редактируемой карточки данными\r\n    })\r\n    .catch((err) => alert(err));\r\n}\r\n\r\nexport let todoWrapper = document.querySelector(\".board__task-wrapper\"); //контейнер для карточек TODO\r\nexport let inProgressWrapper = document.querySelector(\".in-progress-wrapper\"); //контейнер для карточек INPROGRESS\r\nlet doneWrapper = document.querySelector(\".done-wrapper\"); //контейнер для карточек DONE\r\n\r\n//добавляем пользователей в список формы добавления/редактирования карточки\r\nfunction createListOfUsers(users) {\r\n  let selectUsers = document.querySelector(\".task__edit-user\");\r\n  selectUsers.innerHTML = \"\";\r\n  users.forEach((user) => {\r\n    let option = createTag(\"option\", \"user\", user.name);\r\n    option.innerText = user.name;\r\n    appendTag(selectUsers, option);\r\n  });\r\n}\r\n\r\n//рендер формы на доске TODO\r\nexport function renderTodo() {\r\n  let cardsToDo = cards.filter(\r\n    (el) => el.status === \"todo\" && el.active === \"true\"\r\n  );\r\n  todoWrapper.innerHTML = \"\";\r\n  cardsToDo.forEach((card) => {\r\n    let form = createTag(\"form\", \"task_to-do\");\r\n    form.classList.add(\"task\");\r\n    form.setAttribute(\"data-id\", card.id); //присваиваем форме data-id\r\n    let taskBtn = createTag(\"div\", \"task__btn\");\r\n    let btnEdit = createButton(\"task__btn-edit\", \"\", \"Edit\");\r\n    btnEdit.classList.add(\"btn\");\r\n    let btnDelete = createButton(\"task__btn-delete\", \"\", \"Delete\");\r\n    btnDelete.classList.add(\"btn\");\r\n    let taskTitle = createTag(\"p\", \"task__title\", \"Title\");\r\n    let taskDescription = createTag(\"p\", \"task__description\", \"Description\");\r\n    let taskUser = createTag(\"p\", \"task__user\", \"User\");\r\n    let taskDate = createTag(\"date\", \"task__date\", \"Date\");\r\n    let btnToProgress = createButton(\"to-progress\");\r\n\r\n    fillingCard(\"todo\", card, taskTitle, taskDescription, taskUser, taskDate); //заполнение данных карточки\r\n\r\n    appendTag(taskBtn, btnEdit, btnDelete);\r\n    appendTag(\r\n      form,\r\n      taskBtn,\r\n      taskTitle,\r\n      taskDescription,\r\n      taskUser,\r\n      taskDate,\r\n      btnToProgress\r\n    );\r\n    appendTag(todoWrapper, form);\r\n  });\r\n\r\n  if (cardsToDo.length === 0) {\r\n    let messageIfEmpty = createTag(\r\n      \"p\",\r\n      \"empty-message\",\r\n      \"Currently there are no tasks to do\"\r\n    );\r\n    appendTag(todoWrapper, messageIfEmpty);\r\n  }\r\n}\r\n\r\n//рендер формы на доске INPROGRESS\r\nexport function renderInProgress() {\r\n  let cardsInProgress = cards.filter(\r\n    (el) => el.status === \"in_progress\" && el.active === \"true\"\r\n  );\r\n  inProgressWrapper.innerHTML = \"\";\r\n  cardsInProgress.forEach((card) => {\r\n    let form = createTag(\"form\", \"in-progress\");\r\n    form.classList.add(\"task\");\r\n    form.setAttribute(\"data-id\", card.id); //присваиваем форме data-id\r\n    let taskBtn = createTag(\"div\", \"task__btn\");\r\n    let btnBack = createButton(\"task__btn-back\", \"\", \"Back\");\r\n    btnBack.classList.add(\"btn\");\r\n    let btnComplete = createButton(\"task__btn-complete\", \"\", \"Complete\");\r\n    btnComplete.classList.add(\"btn\");\r\n    let taskTitle = createTag(\"p\", \"task__title\", \"Title\");\r\n    let taskDescription = createTag(\"p\", \"task__description\", \"Description\");\r\n    let taskUser = createTag(\"p\", \"task__user\", \"User\");\r\n    let taskDate = createTag(\"date\", \"task__date\", \"Date\");\r\n\r\n    fillingCard(\r\n      \"in_progress\",\r\n      card,\r\n      taskTitle,\r\n      taskDescription,\r\n      taskUser,\r\n      taskDate\r\n    ); //заполнение данных карточки\r\n\r\n    appendTag(taskBtn, btnBack, btnComplete);\r\n    appendTag(form, taskBtn, taskTitle, taskDescription, taskUser, taskDate);\r\n    appendTag(inProgressWrapper, form);\r\n  });\r\n\r\n  if (cardsInProgress.length === 0) {\r\n    let messageIfEmpty = createTag(\r\n      \"p\",\r\n      \"empty-message\",\r\n      \"Currently there are no tasks in progress\"\r\n    );\r\n    appendTag(inProgressWrapper, messageIfEmpty);\r\n  }\r\n}\r\n\r\n//рендер формы на доске DONE\r\nexport function renderDone() {\r\n  let cardsDone = cards.filter(\r\n    (el) => el.status === \"done\" && el.active === \"true\"\r\n  );\r\n  doneWrapper.innerHTML = \"\";\r\n  cardsDone.forEach((card) => {\r\n    let form = createTag(\"form\", \"task_done\");\r\n    form.classList.add(\"task\");\r\n    form.setAttribute(\"data-id\", card.id); //присваиваем форме data-id\r\n    let taskBtn = createTag(\"div\", \"task__btn\");\r\n    let btnDelete = createButton(\"task__btn-delete\", \"\", \"Delete\");\r\n    btnDelete.classList.add(\"btn\");\r\n    let taskTitle = createTag(\"p\", \"task__title\", \"Title\");\r\n    let taskDescription = createTag(\"p\", \"task__description\", \"Description\");\r\n    let taskUser = createTag(\"p\", \"task__user\", \"User\");\r\n    let taskDate = createTag(\"date\", \"task__date\", \"Date\");\r\n\r\n    fillingCard(\"done\", card, taskTitle, taskDescription, taskUser, taskDate); //заполнение данных карточки\r\n\r\n    appendTag(taskBtn, btnDelete);\r\n    appendTag(form, taskBtn, taskTitle, taskDescription, taskUser, taskDate);\r\n    appendTag(doneWrapper, form);\r\n  });\r\n\r\n  if (cardsDone.length === 0) {\r\n    let messageIfEmpty = createTag(\r\n      \"p\",\r\n      \"empty-message\",\r\n      \"Currently there are no done tasks\"\r\n    );\r\n    appendTag(doneWrapper, messageIfEmpty);\r\n  }\r\n}\r\n\r\n//наполнение карточек данными\r\nexport function fillingCard() {\r\n  let [status, card, taskTitle, taskDescription, taskUser, taskDate] =\r\n    arguments;\r\n  taskTitle ? (taskTitle.innerText = card.title) : null;\r\n  taskDescription ? (taskDescription.innerText = card.description) : null;\r\n  taskUser ? (taskUser.innerText = card.user) : null;\r\n\r\n  status === \"todo\" && taskDate ? (taskDate.innerText = card.date) : null;\r\n  status === \"in_progress\" && taskDate\r\n    ? (taskDate.innerText = card.date_to_progress)\r\n    : null;\r\n  status === \"done\" && taskDate\r\n    ? (taskDate.innerText = card.date_to_done)\r\n    : null;\r\n\r\n  setCountOfCards();\r\n}\r\n\r\n//наполнение формы изменения карточки данными\r\nfunction fillingFormCard() {\r\n  let [card, taskTitle, taskDescription, taskUser] = arguments;\r\n  taskTitle ? (taskTitle.value = card.title) : null;\r\n  taskDescription ? (taskDescription.value = card.description) : null;\r\n  taskUser ? (taskUser.value = card.user) : null;\r\n}\r\n\r\n//закрытие формы добавления/изменения карточек\r\nexport function closeEditForm() {\r\n  cardFormWrapper.classList.toggle(\"overlay-active\");\r\n  let form = document.querySelector(\".task__edit\");\r\n  form.querySelector(\".task__edit-title\").value = \"\";\r\n  form.querySelector(\".task__edit-description\").value = \"\";\r\n}\r\n\r\n//функция сворачивания/разворачивания досок\r\nexport function boardDisplay(el) {\r\n  let board = el.closest(\".board\");\r\n  let boardId = board.id;\r\n  let todoHeader = document.querySelector(\"#todo-header\"); // header доски todo\r\n  let inProgressHeader = document.querySelector(\"#in-progress-header\"); // header доски in-progress\r\n  let doneHeader = document.querySelector(\"#done-header\"); // header доски done\r\n\r\n  boardId !== \"board_todo\"\r\n    ? todoHeader.closest(\".board\").classList.add(\"task-hidden\")\r\n    : null;\r\n  boardId !== \"board_in-progress\"\r\n    ? inProgressHeader.closest(\".board\").classList.add(\"task-hidden\")\r\n    : null;\r\n  boardId !== \"board_done\"\r\n    ? doneHeader.closest(\".board\").classList.add(\"task-hidden\")\r\n    : null;\r\n  board.classList.toggle(\"task-hidden\");\r\n}\r\n","import {\r\n  renderTodo,\r\n  renderInProgress,\r\n  renderDone,\r\n  todoWrapper,\r\n  getCardData,\r\n  inProgressWrapper,\r\n  displayTime,\r\n  boardDisplay,\r\n  closeEditForm,\r\n} from \"./display.js\";\r\n\r\nimport {\r\n  setCountOfCards,\r\n  calcCountTasksInProgress,\r\n  getTime,\r\n  getDate,\r\n} from \"./additional.js\";\r\n\r\nexport let cards; // массив объектов карточек\r\nlet id; // четчик уникальных id\r\nlet deletedCard; //маркер, в который записывается объект кнопки удаления карточки для дальнейшего определения по какой доске был клик и где нужно удатиль карточку\r\nlet addOrEdit; //маркер, который показывает пользователь добавляет новую карточку или редактирует существующую\r\nlet editCard; // редактируемая форма\r\nlet idEditCard; // data-id редактируемой формы\r\nlet title; // содержание заголовка в форме добавления/редактирования карточки\r\nlet description; // содержание описания задачи в форме добавления/редактирования карточки\r\nlet user; // выбранный пользователь в форме добавления/редактирования карточки\r\n\r\n//достаем из localstorage счетчик id и массив карточек\r\nlocalStorage.getItem(\"id\") ? (id = localStorage.getItem(\"id\")) : (id = 0);\r\nlocalStorage.getItem(\"cards\")\r\n  ? (cards = JSON.parse(localStorage.getItem(\"cards\")))\r\n  : (cards = []);\r\n\r\n//запись в localstorage счетчика id и массива карточек\r\nfunction setLocalStorage(cardsArray, idCounter) {\r\n  cardsArray ? localStorage.setItem(\"cards\", JSON.stringify(cardsArray)) : null;\r\n  idCounter ? localStorage.setItem(\"id\", idCounter) : null;\r\n}\r\n\r\n//объект карточки\r\nexport function createObject() {\r\n  let [id, title, description, user, date] = arguments;\r\n  let task = {\r\n    id: id,\r\n    title: title,\r\n    description: description,\r\n    user: user,\r\n    date: date,\r\n    status: \"todo\", //inprogress, done\r\n    active: \"true\", //false - если карточка была удалена\r\n  };\r\n  return task;\r\n}\r\n\r\ndocument.addEventListener(\r\n  \"DOMContentLoaded\",\r\n  function () {\r\n    displayTime(getTime);\r\n    renderTodo();\r\n    renderInProgress();\r\n    renderDone();\r\n  },\r\n  false\r\n);\r\n\r\nlet boardWrapper = document.querySelector(\".board-wrapper\"); // контейнер всех досок\r\nlet doneWrapper = document.querySelector(\".done-wrapper\"); // контейнер Доски done\r\nexport let cardFormWrapper = document.querySelector(\".overlay\"); // контейнер пустого шаблона новой/редактирования карточки\r\nexport let cardForm = document.querySelector(\".task__edit\"); //шаблон новой/редактируемой карточки\r\nlet confirmBtn = document.querySelector(\".task__edit-confirm\"); //кнопка confirm в шаблоне для подтверждения добавления/изменения карточки\r\nlet cancelTodoBtn = document.querySelector(\".task__edit-cancel\"); //кнопка cancel для закрытия шаблона добавления/изменения карточки\r\nlet warningWrapper = document.querySelector(\".overlay-warning\"); //контейнер формы Warning\r\nlet confirmWarningBtn = document.querySelector(\".warning__confirm\"); //кнопка в форме Warning для подтверждения действий (удаления карточек)\r\nlet cancelWarningBtn = document.querySelector(\".warning__cancel\"); //кнопка cancel в форме Warning\r\n\r\nboardWrapper.addEventListener(\"click\", (e) => {\r\n  let el = e.target;\r\n\r\n  //сворачивание/разворачивание доски\r\n  el.className.includes(\"board__header\") ? boardDisplay(el) : null;\r\n\r\n  //прослушка на кнопку добавления новой карточки\r\n  if (el.className.includes(\"board__add-todo\")) {\r\n    addOrEdit = \"add\"; //устанавливаем флаг в состояние add\r\n    getCardData(); //получаем список пользователей и добавляем в шаблон новой карточки\r\n    cardFormWrapper.classList.toggle(\"overlay-active\"); //добавляем класс для отображения формы редактировния карточки\r\n  }\r\n\r\n  //прослушка на кнопку удаления всех выполненных карточек (вызов формы warning)\r\n  if (el.className.includes(\"board__delete-all\")) {\r\n    warningWrapper.classList.toggle(\"warning-active\");\r\n    document.querySelector(\".warning__text-description\").innerText =\r\n      \"Do you want to delete all tasks?\";\r\n    deletedCard = el;\r\n  }\r\n});\r\n\r\n//прослушка на кнопку Confirm в форме добавления/редактирования карточки для добавления изменений в массив\r\nconfirmBtn.addEventListener(\"click\", () => {\r\n  addOrEdit === \"add\" ? addNewCard() : null; //вызоваем функцию добавления в массив объекта новой карточки\r\n  addOrEdit === \"edit\" ? editingCard() : null; //вызоваем функцию редактирования объекта карточки\r\n  renderTodo();\r\n});\r\n\r\n//Функция добавления в массив объекта новой карточки\r\nfunction addNewCard() {\r\n  getCardFormData(cardForm);\r\n  if (title && description) {\r\n    id++; //инкрементируем счетчик\r\n    let date = getDate();\r\n    let card = createObject(id, title, description, user, date);\r\n    cards.push(card);\r\n    setLocalStorage(cards, id);\r\n    closeEditForm();\r\n  }\r\n}\r\n\r\n// прослушка на контейнер TODO\r\ntodoWrapper.addEventListener(\"click\", (event) => {\r\n  let el = event.target;\r\n\r\n  //прослушка на кнопку редактирования карточки\r\n  if (el.className.includes(\"task__btn-edit\")) {\r\n    inListenerEditCard(el);\r\n  }\r\n\r\n  //прослушка на кнопку удаления карточки из доски ToDo\r\n  if (el.className.includes(\"task__btn-delete\")) {\r\n    warningWrapper.classList.toggle(\"warning-active\"); //открываем окно с предупреждением\r\n    document.querySelector(\".warning__text-description\").innerText =\r\n      \"Do you want to delete the current task?\";\r\n    deletedCard = el; //маркер, с помощью которго определяется какая карточка удаляется\r\n  }\r\n\r\n  //прослушка на кнопку перемещения карточки из TODO в IN-PROGRESS\r\n  if (el.className.includes(\"to-progress\")) {\r\n    let countTasksInProgress = calcCountTasksInProgress(); // находим количество карточек In_progress\r\n    if (countTasksInProgress < 6) {\r\n      inListenerToProgress(el);\r\n      setLocalStorage(cards);\r\n      renderTodo();\r\n      renderInProgress();\r\n    } else {\r\n      warningWrapper.classList.toggle(\"warning-active\"); //открываем окно с предупреждением\r\n      document.querySelector(\".warning__confirm\").hidden = true; //скрываем кнопку Confirm в форме Warning\r\n      document.querySelector(\".warning__text-description\").innerText =\r\n        \"There are many tasks in progress. Complete the task and try again\";\r\n    }\r\n  }\r\n});\r\n\r\n// функция определения заголовка, описания и исполнителя В ФОРМЕ добавляемой/редактируемой задачи (карточки)\r\nfunction getCardFormData() {\r\n  title = cardForm.querySelector(\".task__edit-title\").value;\r\n  description = cardForm.querySelector(\".task__edit-description\").value;\r\n  user = cardForm.querySelector(\".task__edit-user\").value;\r\n}\r\n\r\nfunction inListenerEditCard(el) {\r\n  addOrEdit = \"edit\";\r\n  editCard = el.closest(\".task_to-do\");\r\n  idEditCard = editCard.getAttribute(\"data-id\"); // data-id редактируемой формы\r\n\r\n  let titleTag = cardForm.querySelector(\".task__edit-title\");\r\n  let descriptionTag = cardForm.querySelector(\".task__edit-description\");\r\n  let userTag = cardForm.querySelector(\".task__edit-user\");\r\n  cards.forEach((card) => {\r\n    if (card.id == idEditCard) {\r\n      getCardData(card, titleTag, descriptionTag, userTag); //получаем список пользователей, заполняем форму данными редактируемой карточки\r\n      cardFormWrapper.classList.toggle(\"overlay-active\"); //добавляем класс для отображения формы редактировния карточки\r\n    }\r\n  });\r\n}\r\n\r\n//'удаляем' карточку из массива (устанавливаем флаг active=false)\r\nfunction inListenerDeleteCard(el, parentClass) {\r\n  let deletedCardId = el.closest(parentClass).getAttribute(\"data-id\");\r\n  cards.forEach((card) => {\r\n    if (card.id == deletedCardId) {\r\n      card.active = \"false\";\r\n      card.date_deleted = getDate();\r\n    }\r\n  });\r\n}\r\n\r\n//прослушка на кнопку перемещения карточки из IN-PROGRESS в TODO и в Done\r\ninProgressWrapper.addEventListener(\"click\", (e) => {\r\n  let el = e.target;\r\n  //  из IN-PROGRESS в TODO\r\n  el.className.includes(\"task__btn-back\") ? inListenerToTodo(el) : null;\r\n  // из IN-PROGRESS в Done\r\n  el.className.includes(\"task__btn-complete\") ? inListenerToDone(el) : null;\r\n\r\n  setLocalStorage(cards); //записываем в localStorage измененный массив карточек\r\n  renderTodo();\r\n  renderInProgress();\r\n  renderDone();\r\n});\r\n\r\n//'перемещаем' карточку из todo в in_progress (устанавливаем флаг status = in_progress)\r\nfunction inListenerToProgress(el) {\r\n  let toProgressCardId = el.closest(\".task_to-do\").getAttribute(\"data-id\");\r\n\r\n  cards.forEach((card) => {\r\n    if (card.id == toProgressCardId) {\r\n      card.status = \"in_progress\";\r\n      card.date_to_progress = getDate();\r\n    }\r\n  });\r\n}\r\n\r\n//'перемещаем' карточку из In-progress в Todo в  (устанавливаем флаг status = todo)\r\nfunction inListenerToTodo(el) {\r\n  let toTodoCardId = el.closest(\".in-progress\").getAttribute(\"data-id\");\r\n  cards.forEach((card) => {\r\n    if (card.id == toTodoCardId) {\r\n      card.status = \"todo\";\r\n      card.date_to_todo = getDate();\r\n    }\r\n  });\r\n}\r\n\r\n//'перемещаем' карточку из todo в Done (устанавливаем флаг status = done)\r\nfunction inListenerToDone(el) {\r\n  let toDoneCardId = el.closest(\".in-progress\").getAttribute(\"data-id\");\r\n  cards.forEach((card) => {\r\n    if (card.id == toDoneCardId) {\r\n      card.status = \"done\";\r\n      card.date_to_done = getDate();\r\n    }\r\n  });\r\n}\r\n\r\n//Функция редактирования карточки\r\nfunction editingCard() {\r\n  getCardFormData(editCard); //получаем данные из редактируемой карточки\r\n  let date = getDate();\r\n  if (title && description) {\r\n    cards.forEach((card) => {\r\n      if (card.id == idEditCard) {\r\n        card.title = title;\r\n        card.description = description;\r\n        card.user = user;\r\n        card.date_edit = date;\r\n        setLocalStorage(cards); //загружаем в localStorage измененный массив\r\n        closeEditForm(); //закрываем форму\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n//Закрытие формы для добавления новой карточки или редактирования старой при нажатии кнопки Cancel\r\ncancelTodoBtn.addEventListener(\"click\", () => {\r\n  closeEditForm();\r\n});\r\n\r\n//прослушка на кнопку удаления карточки из доски DONe\r\ndoneWrapper.addEventListener(\"click\", (event) => {\r\n  let el = event.target;\r\n  deletedCard = el;\r\n  if (el.className.includes(\"task__btn-delete\")) {\r\n    warningWrapper.classList.toggle(\"warning-active\"); //открываем окно с предупреждением\r\n    document.querySelector(\".warning__text-description\").innerText =\r\n      \"Do you want to delete the current task?\";\r\n  }\r\n});\r\n\r\n//функция вызова прослушки на кнопку confirm с указанием, где происходит удаление карточек\r\nconfirmWarningBtn.addEventListener(\"click\", () => {\r\n  warningWrapper.classList.toggle(\"warning-active\"); //закрываем окно с предупреждением\r\n  //если происходит удаление карточек на доске Done\r\n  if (deletedCard.closest(\".task_done\")) {\r\n    inListenerDeleteCard(deletedCard, \".task_done\");\r\n    setLocalStorage(cards);\r\n    renderDone();\r\n  }\r\n  //если происходит удаление карточек на доске Todo\r\n  if (deletedCard.closest(\".task_to-do\")) {\r\n    inListenerDeleteCard(deletedCard, \".task_to-do\");\r\n    setLocalStorage(cards);\r\n    renderTodo();\r\n  }\r\n\r\n  //если происходит удаление всех карточек\r\n  if (deletedCard.className.includes(\"board__delete-all\")) {\r\n    cards = [];\r\n    setLocalStorage(cards);\r\n    renderTodo();\r\n    renderInProgress();\r\n    renderDone();\r\n    setCountOfCards();\r\n  }\r\n});\r\n\r\n//закрытие формы warning при нажатии кнопки Cancel\r\ncancelWarningBtn.addEventListener(\"click\", () => {\r\n  warningWrapper.classList.toggle(\"warning-active\");\r\n  document.querySelector(\".warning__confirm\").hidden = false;\r\n});\r\n"]}